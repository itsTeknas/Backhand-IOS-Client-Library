#import <Foundation/Foundation.h>
#import "SWGAuthSuccess.h"
#import "SWGApi.h"

/**
* Backhand Api
* Apis to access Backhand backend services
*
* OpenAPI spec version: 0.0.1
* Contact: sanket@blackcurrantapps.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGAuthenticationApi: NSObject <SWGApi>

extern NSString* kSWGAuthenticationApiErrorDomain;
extern NSInteger kSWGAuthenticationApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// FB Login
/// Submit the facebook token, our backend will query the facebook servers with with it and save the responce to fill in your basic profile.
///
/// @param fbToken Facebook&#39;s Token
/// 
///  code:200 message:"Login Success"
///
/// @return SWGAuthSuccess*
-(NSURLSessionTask*) authenticateFacebookPostWithFbToken: (NSString*) fbToken
    completionHandler: (void (^)(SWGAuthSuccess* output, NSError* error)) handler;


/// Sign up new user
/// If the user exists, throw an error. Otherwise sign up.
///
/// @param email Email ID
/// 
///  code:200 message:"Email Verification Requested"
///
/// @return NSObject*
-(NSURLSessionTask*) authenticateRequestEmailVerificationPostWithEmail: (NSString*) email
    completionHandler: (void (^)(NSObject* output, NSError* error)) handler;


/// Sign up new user
/// If the user exists, throw an error. Otherwise sign up.
///
/// @param firstName First Name
/// @param email Email ID
/// @param password Password
/// @param gender 
/// @param lastName Last Name (optional)
/// 
///  code:200 message:"Signup Success",
///  code:302 message:"Email Already Exists"
///
/// @return SWGAuthSuccess*
-(NSURLSessionTask*) authenticateSignupPostWithFirstName: (NSString*) firstName
    email: (NSString*) email
    password: (NSString*) password
    gender: (NSString*) gender
    lastName: (NSString*) lastName
    completionHandler: (void (^)(SWGAuthSuccess* output, NSError* error)) handler;


/// Password Login
/// Pass Traditional Username and Password to get token. If the user is not registered, please signup first.
///
/// @param grantType 
/// @param username Email ID
/// @param password Password
/// @param clientId 
/// @param clientSecret 
/// 
///  code:200 message:"Login Success",
///  code:302 message:"Login Failure",
///  code:303 message:"Email Unverified"
///
/// @return SWGAuthSuccess*
-(NSURLSessionTask*) oauthTokenPostWithGrantType: (NSString*) grantType
    username: (NSString*) username
    password: (NSString*) password
    clientId: (NSString*) clientId
    clientSecret: (NSString*) clientSecret
    completionHandler: (void (^)(SWGAuthSuccess* output, NSError* error)) handler;



@end
